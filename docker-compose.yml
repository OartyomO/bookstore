version: '3.9'

services:
  server:
    restart: always
    image: 354918389937.dkr.ecr.us-west-1.amazonaws.com/server:latest
    container_name: bookstore_server
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - POSTGRES_URL=postgresql://postgres:postgres@db:5432/bookstore
    depends_on:
      - db
    networks:
      - bookstore_network

  db:
    image: postgres:13-alpine
    restart: always
    container_name: bookstore_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bookstore
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - bookstore_network

  client:
    restart: always
    image: 354918389937.dkr.ecr.us-west-1.amazonaws.com/client:latest
    container_name: bookstore_client
    volumes:
      - /app/node_modules
      - ./client:/app
    depends_on:
      - server
    networks:
      - bookstore_network

  nginx:
    restart: always
    depends_on:
      - server
      - client
    image: 354918389937.dkr.ecr.us-west-1.amazonaws.com/nginx:latest
    container_name: bookstore_nginx
    ports:
      - 8080:80
    networks:
      - bookstore_network
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring

networks:
  bookstore_network:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  grafana-storage:
    driver: local